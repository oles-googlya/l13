---
- name: prepare aws cloud
  hosts: localhost
  vars_files:
    - vars.yml
  
  tasks:
    - name: create a new ec2 key pair
      ec2_key:
        name: key-1
        region: us-east-1
      register: ec2_key_result
    - name: print
      debug:
        var: ec2_key_result.key.private_key
    - name: Save private key
      copy: content="{{ ec2_key_result.key.private_key }}" dest="/root/.ssh/id_rsa" mode=0600
  
    - name: create security group 1
      ec2_group:
        name: Allow-In-22
        description: Open port 22 in
        region: us-east-1
        rules:
          - proto: tcp
            ports: 
            - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22 only
          
    - name: create security group 2
      ec2_group:
        name: Allow-In-22-8080
        description: Open ports 22 and 8080 in
        region: us-east-1
        rules:
          - proto: tcp
            ports: 
            - 22
            - 8080
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all on port 22 & 8080
  
    - name: Launch EC2 Instance 1 (Build)
      ec2:
        key_name: key-1
        region: us-east-1
        group: Allow-In-22
        instance_type: t2.micro
        image: ami-04505e74c0741db8d
        wait: yes
        count: 1
        vpc_subnet_id: subnet-02e67977e95532821
        assign_public_ip: yes
      register: output
    - name: print
      debug:
        var: output.instances[0].public_ip
    - name: update inventory
      add_host:
        name: "{{ output.instances[0].public_ip }}"
        groups: build

    - name: Sleep for 300 seconds and continue with play
      wait_for:
        timeout: 300
    
- name: Work on build host
  hosts: build
  remote_user: ubuntu
  become: yes
  become_user: root

  tasks:
  - name: Ensure jdk is present
    apt:
      name: default-jdk
      state: present
      update_cache: yes

  - name: Ensure maven is present
    apt:
      name: maven
      state: present
      update_cache: yes
  
  - name: Ensure git is present
    apt:
      name: git
      state: present
      update_cache: yes  

  tasks:
  - name: Cloning the repo
    git: 
      repo: https://github.com/boxfuse/boxfuse-sample-java-war-hello.git
      dest: /home/ubuntu/boxfuse-sample-java-war-hello
      clone: yes
      update: yes
    
  - name: Artifact generation
    command: mvn package
    args:
        chdir: /home/ubuntu/boxfuse-sample-java-war-hello/

  - name: create backet
    amazon.aws.aws_s3:
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      bucket: wonderbacket.647524
      mode: create
      permission: public-read
  
  - name: put artifact to backet
    amazon.aws.aws_s3:
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      bucket: wonderbacket.647524
      object: hello.war
      src:  /srv/boxfuse/target/hello-1.0.war
      mode: put